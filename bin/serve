#!/usr/bin/env node

const cp = require('child_process');
const fs = require('fs/promises');
const { resolve } = require('path');
const { promisify } = require('util');

const matter = require('gray-matter');
const { TiddlyWiki } = require('tiddlywiki');

const exec = promisify(cp.exec);

(async () => {
  const [node, cmd, dir, ...args] = process.argv;

  try {
    await fs.stat(dir);
    await fs.stat(resolve(dir, 'tiddlywiki.info'));
  } catch (e) {
    console.error('directory or tiddlywiki.info does not exist');
    return;
  }

  const $tw = TiddlyWiki();
  const user = await exec('git config user.name');

  const dirs = [
    resolve(dir, './plugins'),
    resolve(__dirname, '../wiki/plugins')
  ];

  const plugins = await Promise.all(
    dirs.map(d =>
      fs.readdir(d).then(plugins =>
        plugins
          .filter(path => !path.startsWith('.'))
          .map(path => resolve(d, path))
          .map(d => `+${d}`)
      )
    )
  ).then(arrays => arrays.reduce((a, b) => a.concat(b), []));

  $tw.boot.extraPlugins = plugins;

  // create the custom deserializer as needed
  if (plugins.some(plugin => /fs\-plus/.test(plugin))) {
    $tw.modules.define(
      '$:/plugins/noahlange/fs-plus/deserialize.js',
      'tiddlerdeserializer',
      {
        'text/x-markdown'(text) {
          const { content, data } = matter(text);
          return [{ ...data, text: content }];
        }
      }
    );
  }

  $tw.boot.argv = [
    dir,
    `--listen`,
    `anon-username=${user.stdout.trim() || 'Anonymous'}`,
    ...args
  ];

  try {
    $tw.boot.boot();
  } catch (e) {
    console.error(e);
  }
})();
