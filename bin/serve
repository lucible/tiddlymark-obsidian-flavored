#!/usr/bin/env node

const cp = require('child_process');
const { promises: fs } = require('fs');
const { resolve } = require('path');
const { promisify } = require('util');

const matter = require('gray-matter');
const { TiddlyWiki } = require('tiddlywiki');

const exec = promisify(cp.exec);

(async () => {
  const [node, cmd, dir, ...args] = process.argv;

  const $tw = TiddlyWiki();
  const user = await exec('git config user.name');
  const plugins = await fs.readdir(resolve(__dirname, '../wiki/plugins'));

  // we also want to load all the plugins from './wiki/plugins
  $tw.boot.extraPlugins = plugins
    .map(p => resolve(__dirname, '../wiki/plugins', p))
    .filter(path => !path.startsWith('.'))
    .map(d => `+${d}`);

  // create the custom deserializer if needed
  if (plugins.includes('fs-plus')) {
    $tw.modules.define(
      '$:/plugins/noahlange/fs-plus/deserialize.js',
      'tiddlerdeserializer',
      {
        'text/x-markdown'(text) {
          const { content, data } = matter(text);
          return [{ ...data, text: content }];
        }
      }
    );
  }

  $tw.boot.argv = [
    dir,
    `--listen`,
    `anon-username=${user.stdout.trim()}`,
    ...args
  ];

  $tw.boot.boot();
})().catch(e => console.error(e));
